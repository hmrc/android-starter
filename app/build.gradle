plugins {
    id 'com.github.dawnwords.jacoco.badge' version '0.1.0'
    id 'com.gladed.androidgitversion' version '0.4.9'
    id 'io.gitlab.arturbosch.detekt' version '1.10.0'
    id "org.jetbrains.kotlin.plugin.allopen" version "$kotlinVersion"
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.gitlab.arturbosch.detekt'
apply from: 'coverage/jacoco.gradle'

androidGitVersion {
    format '%tag%'
}

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "uk.gov.hmrc"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    // Android X
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "androidx.constraintlayout:constraintlayout:2.0.2"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"

    // Material
    implementation "com.google.android.material:material:1.2.1"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"

    // Navigation
    implementation "androidx.navigation:navigation-ui:$navVersion"
    implementation "androidx.navigation:navigation-fragment:$navVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"

    // okhttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp3Version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3Version"
    androidTestImplementation("com.squareup.okhttp3:mockwebserver:$okhttp3Version")

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // JUnit
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:$androidTestVersion"
    androidTestImplementation "androidx.test:rules:$androidTestVersion"
    androidTestUtil "androidx.test:orchestrator:$androidTestVersion"

    // Espresso for UI testing
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$espressoVersion"

    //ConditionWatcher for espresso
    androidTestImplementation 'com.azimolabs.conditionwatcher:conditionwatcher:0.2'
}